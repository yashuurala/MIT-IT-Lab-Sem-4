lab 5

Q1

#include<LPC17xx.h>

unsigned int i,j,c=0;
unsigned long LED = 0x00000010;

int main(void)
{
	LPC_PINCON->PINSEL0 &= 0xFF0000FF;
	LPC_GPIO0->FIODIR |= 0X00000FF0;
	
	while(1)
	{
		LPC_GPIO0->FIOPIN=c<<4;
		for(i=0;i<10000;i++);
		
		if(c == 0x80)
			c=1;
		else
			c<<=1;
	}
}

Q2

// 8 Bit binary Up Down Counter
#include<LPC17xx.h>

unsigned int i,j,c=0,f=0;;
unsigned long LED = 0x00000000;

int main(void)
{
	LPC_PINCON->PINSEL0 &= 0xFF0000FF;
	LPC_GPIO0->FIODIR |= 0X00000FF0;
	
	while(1)
	{
		c++;
		LPC_GPIO0->FIOPIN=LED<<4;
		if(LED==255)
			f=1;
		else if(LED==0)
			f=0;
		if(f==0)
		{
				LED++;
		}
		else
		{
			if(LED==0)
				f=0;
			else
				LED--;
		}
		for(i=0;i<50000;i++);

		
	}
}

............................................................................................................................................................................................

lab 6

Q1

//C Program to simulate 4-digit BCD up/down counter on the multiplexed seven segment display.

#include <LPC17xx.h>
#include<stdio.h>
#define FIRST_SEG 0xF87FFFFF
#define SECOND_SEG 0xF8FFFFFF
#define THIRD_SEG 0xF97FFFFF
#define FOURTH_SEG 0xF9FFFFFF
#define DISABLE_ALL 0xFA7FFFFF

unsigned int dig1=0x00,dig2=0x00,dig3=0x00,dig4=0x00;
unsigned int twenty_count=0x00,dig_count=0x00,temp1=0x00;
unsigned char dec[10]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F};
unsigned char tm0_flag=0x00,one_s_f=0x00;
unsigned long int temp2=0x00000000,i=0;
unsigned int temp3=0x00;

void delay(void);
void display(void);
void downc(void);
void upc(void);


int main(void)
{
	SystemInit();
	SystemCoreClockUpdate();

	LPC_PINCON->PINSEL0&=0XFF0000FF;
	LPC_PINCON->PINSEL3&=0XFFC03FFF;
	LPC_GPIO0->FIODIR|=0X00000FF0;
	LPC_GPIO1->FIODIR|=0X07800000;
	LPC_GPIO2->FIODIR = 0x0;
	while(1)
	{
		delay();
		dig_count+=1;
		if(dig_count==0x05)
		{
			dig_count=0x00;
			one_s_f=0xFF;
		}
		if(one_s_f==0xFF)
		{
			one_s_f=0x00;
			if((LPC_GPIO2->FIOPIN & 1))
			{
				dig1+=1;
				if(dig1==0x0A)
				{
					dig1=0;
					dig2+=1;
					if(dig2==0x0A)
					{ 
						dig2=0;
						dig3+=1;
						if(dig3==0x0A)
						{
							dig3=0;
							dig4+=1;
							if(dig4==0x0A)
							{
								dig4=0;
						
							}
						}
					}
				}
			}
			else
			{
				dig1 -= 1;
				if(dig1==0x0)
				{
					dig1=0x9;
					dig2-=1;
					if(dig2==0x0)
					{ 
						dig2=0x9;
						dig3-=1;
						if(dig3==0x0)
						{
							dig3=0x9;
							dig4-=1;
							if(dig4==0x0)
							{
								dig4=0x9;
								dig3=0x9;
								dig2=0x9;
								dig1=0x9;
							}
						}
					}
				}
			}
		}
		display();
	}
}

void display(void)
{
	if(dig_count==0x01)
	{
		temp1=dig1;
		LPC_GPIO1->FIOPIN=FIRST_SEG;
	}
	
	else if(dig_count==0x02)
	{
		temp1=dig2;
		LPC_GPIO1->FIOPIN=SECOND_SEG;
	}
	
	else if(dig_count==0x03)
	{
		temp1=dig3;
		LPC_GPIO1->FIOPIN=THIRD_SEG;
	}
	
	else if(dig_count==0x04)
	{
		temp1=dig4;
		LPC_GPIO1->FIOPIN=FOURTH_SEG;
	}
	
	temp1 &= 0x0f;
	temp2 = dec[temp1];
	temp2 = temp2<<4;
	LPC_GPIO0->FIOPIN = temp2;
	
	for(i=0;i<500;i++);
	
	LPC_GPIO0->FIOCLR = 0xff0;
	LPC_GPIO1->FIOPIN = DISABLE_ALL;
}

void delay(void)
{
	unsigned int i;
	
	for(i=0;i<1000;i++);
	
	if(twenty_count==1000)
	{
		one_s_f=0xff;
		twenty_count=0x00;
	}
	
	else
	{
		twenty_count += 1;
	}
}

............................................................................................................................................................................................

lab 7

Q1

//C Program to display a number on the LCD Screen when a dice is rolled.

#include<LPC17xx.h>
#include "lcdmsh.h"
#include<stdlib.h>

unsigned char msg1[13]="Dice Result";
unsigned char key;

int main()
{
	unsigned char k;
	lcd_init();
	temp1 = 0x80;
	lcd_com();
	delay_lcd(800);
	lcd_puts(&msg1[0]);
	while(1)
	{
		
		if(!(LPC_GPIO2->FIOPIN & 1<<12))
		{
			k = (rand()%6)+1;
			k=k+0x30;
			temp1 = 0xc0;
			lcd_com();
			delay_lcd(800);
			lcd_puts(&k);
		}
	}
}

Q2

//C Program to simulate a calculator. 
//A,B are single digit BCD numbers and operator maybe +,-,*,/.

#include<LPC17xx.h>
#include "lcdmsh.h"

void scan(void);

unsigned char row,flag,key;
unsigned long int i,var1,temp,temp2,temp3;
unsigned char scan_code[16]={0x11,0x21,0x41,0x81,0x12,0x22,0x42,0x82,
	0x14,0x24,0x44,0x84,0x18,0x28,0x48,0x88};
unsigned char ascii_code[16]={'0','1','2','3','4','5',
	'6','7','8','9','A','B','+','-','*','/'};
int idx = 1;
int ans = 0;
unsigned char finans[3] = {'0','0','\0'};
int a = 0;
int b = 0;
char op;
int count = 0;

int main(void)
{
	LPC_GPIO2->FIODIR = 0x3c00;
	LPC_GPIO1->FIODIR = 0xf87fffff;
	lcd_init();
	temp1 = 0x80;
	lcd_com();
	delay_lcd(800);
	while(count<3)
	{
		while(1)
		{
			for(row=1; row<5; row++)
			{
				if(row==1)
					var1 = 0x400;
				else if(row==2)
					var1 = 0x800;
				else if(row==3)
					var1 = 0x1000;
				else if(row==4)
					var1 = 0x2000;
				temp = var1;
				LPC_GPIO2->FIOCLR = 0x3c00;
				LPC_GPIO2->FIOSET = var1;
				flag = 0;
				scan();
				if(flag==1)
				{
					count++;
					break;
				}
			}
			if(flag==1)
				break;
		}
		for(i=0; i<16; i++)
		{
			if(key==scan_code[i])
			{
				key = ascii_code[i];
				lcd_puts(&key);
				delay_lcd(50000);
				if(count==1)
					a = key-48;
				else if(count==2)
					op = key;
				else if(count==3)
					b = key-48;
				break;
			}
		}
	}
	temp1 = 0xc0;
	lcd_com();
	delay_lcd(800);
	switch(op)
	{
		case '+':
			ans = a+b;
			break;
		case '-':
			ans = a-b;
			break;
		case '*':
			ans = a*b;
			break;
		case '/':
			ans = a/b;
			break;
	}
	while(ans!=0)
	{
		finans[idx--] = (ans%10)+48;
		ans = ans/10;
	}
	lcd_puts(&finans[0]);
	return 0;
}

void scan(void)
{
	temp3 = LPC_GPIO1->FIOPIN;
	temp3 &= 0x07800000;
	if(temp3!=0)
	{
		flag = 1;
		temp3>>=19;
		temp>>=10;
		key = temp3|temp;
	}
}

............................................................................................................................................................................................

lab 8

Q1

//C Program to display the digital value representing the
//difference in analog voltage and ADC channel 4 and channel 5 
//on LCD using BURST and Software Mode.

#include <LPC17xx.h>
#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#include "lcd_msg.h"
#define Ref_Vtg  3.3
#define Full_Scale 0xFFF

unsigned char str[]={"0123456789"};
unsigned long x,temp,t1=0,t2=0;
unsigned int channel,result,i,j, flag1;
unsigned char Msg1[10]={"ADC value"};

void ADC_IRQHandler(void)
{
	x=LPC_ADC->ADSTAT&(3<<4);
	if(x == (x & 1 << 4)) {
		t1 = (LPC_ADC->ADDR4&(0xFFF<<4)>>4);
	} else {
		t2 = (LPC_ADC->ADDR5&(0xFFF<<4)>>4);
	}
	t1 = ceil((t1*3.3)/4096);
	t2 = ceil((t2*3.3)/4096);
	result = abs(t1-t2);
	Msg1[0] = str[result];
	Msg1[1] = '\0';
	temp1 = 0xc0;
	lcd_com();
	delay_lcd(800);
	lcd_puts(&Msg1[0]);
}

int main(void)
{
	
	lcd_init();
	LPC_PINCON->PINSEL3=(0xF)<<28; //P1.31 as AD0.5
	LPC_SC->PCONP |=(1<<12);
	LPC_ADC->ADCR = (1 << 4 | 1 << 5 | 1 << 16 | 1 << 21);
	LPC_ADC->ADINTEN = (1<<4|1<<5);
	flag1 = 1;
	temp1=0x80;
	lcd_com();
	delay_lcd(800);
	lcd_puts(Msg1);
	NVIC_EnableIRQ(ADC_IRQn);
	while(1);
}

